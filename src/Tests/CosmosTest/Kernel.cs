using System;
using System.Collections.Generic;
using System.Text;
using KsIL;
using Sys = Cosmos.System;

namespace CosmosTest
{
    public class Kernel: Sys.Kernel
    {

        KsILVM ksILVM = new KsILVM(1024 * 5, Interrupt.DefaultCosmos);

        protected override void BeforeRun()
        {
            Console.WriteLine("Cosmos booted successfully. Type a line of text to get it echoed back.");
            ksILVM.Load(new byte[] { 0x02, 0x01, 0x19, 0x00, 0x00, 0x00, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x4B, 0x73, 0x49, 0x4C, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x54, 0x65, 0x73, 0x74, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x01, 0x1D, 0x00, 0x00, 0x00, 0x54, 0x68, 0x69, 0x73, 0x20, 0x77, 0x61, 0x73, 0x20, 0x63, 0x6F, 0x64, 0x64, 0x65, 0x64, 0x20, 0x69, 0x6E, 0x20, 0x4B, 0x73, 0x49, 0x4C, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x2D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x01, 0x31, 0x00, 0x00, 0x00, 0x4B, 0x73, 0x49, 0x4C, 0x20, 0x42, 0x79, 0x20, 0x5A, 0x61, 0x72, 0x6C, 0x6F, 0x20, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x6B, 0x6F, 0x7A, 0x69, 0x74, 0x2F, 0x4B, 0x73, 0x49, 0x4C, 0x50, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x01, 0x02, 0x00, 0x00, 0x00, 0x31, 0x35, 0xC8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x31, 0x35, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x34, 0x35, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x38, 0x30, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x01, 0x00, 0xFF, 0xC8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF });
        }
        
        protected override void Run()
        {
            ksILVM.Tick();
            if (ksILVM.memory.Get(0) == 0x00)
            {
                Stop();
            }
        }
    }
}
